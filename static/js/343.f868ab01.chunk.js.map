{"version":3,"file":"static/js/343.f868ab01.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","settings/settings.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_KEY, BASE_URL } from 'settings/settings';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.headers.common = { Authorization: `Bearer ${API_KEY}` };\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const requestStr = 'trending/all/day?language=en-US';\r\n  const {\r\n    data: { results },\r\n  } = await axios.get(requestStr);\r\n  return results;\r\n};\r\n\r\nexport const getMovieDetails = async movieId => {\r\n  const requestStr = `movie/${movieId}`;\r\n  const response = await axios.get(requestStr);\r\n  return response.data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__TIELc\",\"genreText\":\"MovieInfo_genreText__lzvTF\",\"poster\":\"MovieInfo_poster__haZsf\"};","import { DEFAULT_IMG, IMG_URL } from 'settings/settings';\r\n//STYLES\r\nimport styles from './MovieInfo.module.css';\r\n\r\nconst MovieInfo = ({ movieData }) => {\r\n  return (\r\n    <section>\r\n      {movieData && (\r\n        <div className={styles.wrapper}>\r\n          <div className={styles.poster}>\r\n            <img\r\n              src={\r\n                movieData.poster_path\r\n                  ? `${IMG_URL}${movieData.poster_path}`\r\n                  : DEFAULT_IMG\r\n              }\r\n              alt=\"poster\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2>{movieData.title}</h2>\r\n            <p>{`User Score: ${(movieData.vote_average * 10).toFixed(0)}%`}</p>\r\n            <h3>Overview</h3>\r\n            <p>{movieData.overview}</p>\r\n            <h3>Genres</h3>\r\n            <p>\r\n              {movieData.genres.map(({ name, id }) => (\r\n                <span className={styles.genreText} key={`${id}-${name}`}>\r\n                  {name}\r\n                </span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","//IMPORT\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//API\r\nimport { getMovieDetails } from 'api/api';\r\n//COMPONENTS\r\nimport MovieInfo from 'components/MovieInfo';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!movieId) return;\r\n\r\n    const getDetails = async id => {\r\n      const res = await getMovieDetails(id);\r\n      setMovie(res);\r\n    };\r\n\r\n    getDetails(movieId);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <MovieInfo movieData={movie} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","//COMPONENTS\r\nimport MovieDetails from 'components/MovieDetails';\r\n\r\nconst MovieDetailsPage = () => <MovieDetails />;\r\nexport default MovieDetailsPage;\r\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\r\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\r\nexport const API_KEY =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NjQ2ZTNhNzJjMjgwYmIzMTczNTM4NTcyYjdiYjU5OCIsInN1YiI6IjY2MmJjYjIwZTE2ZTVhMDExZmU3ODA0MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.yEgrzEuHHJ9xDHQjTsKaVBpQWM0XvavTiluvcoz50Ns';\r\nexport const DEFAULT_IMG =\r\n  'https://glavcom.ua/img/article/9139/95_main-v1678685008.jpg';\r\n"],"names":["axios","BASE_URL","Authorization","concat","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","results","_context","prev","next","sent","data","abrupt","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","requestStr","response","_context2","_x","movieData","_jsx","children","_jsxs","className","styles","src","poster_path","IMG_URL","DEFAULT_IMG","alt","title","vote_average","toFixed","overview","genres","map","name","id","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","getDetails","res","_Fragment","MovieInfo","MovieDetails"],"sourceRoot":""}